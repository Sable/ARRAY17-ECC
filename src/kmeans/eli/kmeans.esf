
// K-Means
// learn from Dennis paper

//{sqr_dist: z<-+/(x-y)*.2}

//clusters<-
@.k kmeans feature;np;nc;t0;t1;t2;df;dist;index;mb;preclust;preclen;curp;loop;delta;time1;time2
time1<-[]AI 2
mb <- index <- (np <- 1 ^. df <- #feature) # loop <- _1
clusters <- (nc <- k, df[2]) ^. feature
L0:preclust <- nc # curp <- 0
preclen <- k # 0
L10:->(np < curp <- curp + 1)/L20
index[curp] <- t0 <- dist ! _./ dist <- +/ ((nc # feature[curp;]) - clusters) *. 2
preclust[t0;] <- preclust[t0;] + feature[curp;]
preclen[t0]  <- preclen[t0]  + 1
->L10
L20:delta <- +/ mb ~= index
clusters[t2;] <- preclust[t2;] % &. (df[2],#t2) # preclen[t2 <- t1 / ! #t1 <- preclen ~= 0]
mb <- index
->((delta > 0.001)^(500 > loop<-loop+1))/L0
LE: time2 <- (( []AI 2) - time1) % 1000
[] <- 'escaped time, tot is ',(+. time2),' ms, average is ',(+. time2 % loop),' ms'
[] <- 'loop = ',(+. loop),' delta = ',+. delta
//[] <- 'member: ',+.mb-1
@.

)fcopy d_256K
3 kmeans data

//maximum K=5 in d_256 case

//membership mb
//npoints    np
//feature
//nfeatures  nf
//clusters
//nclusters  nc ==> (nc,nf)
//threshold  0.001
//loop       500

// mind <- _./ m <- feature +:((*.2)-) clusters
// delta<- +/ membership ~= index<- m ! _./ m <- feature +:((*.2)-) clusters
